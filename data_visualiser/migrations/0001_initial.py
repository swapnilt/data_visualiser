# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-26 10:01
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MaxTempData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=50)),
                ('year', models.IntegerField()),
                ('month', models.CharField(choices=[(b'JAN', b'January'), (b'FEB', b'February'), (b'MAR', b'March'), (b'APR', b'April'), (b'MAY', b'May'), (b'JUN', b'June'), (b'JUL', b'July'), (b'AUG', b'August'), (b'SEP', b'September'), (b'OCT', b'October'), (b'NOV', b'November'), (b'DEC', b'December')], max_length=3)),
                ('value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MeanTempData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=50)),
                ('year', models.IntegerField()),
                ('month', models.CharField(choices=[(b'JAN', b'January'), (b'FEB', b'February'), (b'MAR', b'March'), (b'APR', b'April'), (b'MAY', b'May'), (b'JUN', b'June'), (b'JUL', b'July'), (b'AUG', b'August'), (b'SEP', b'September'), (b'OCT', b'October'), (b'NOV', b'November'), (b'DEC', b'December')], max_length=3)),
                ('value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MinTempData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=50)),
                ('year', models.IntegerField()),
                ('month', models.CharField(choices=[(b'JAN', b'January'), (b'FEB', b'February'), (b'MAR', b'March'), (b'APR', b'April'), (b'MAY', b'May'), (b'JUN', b'June'), (b'JUL', b'July'), (b'AUG', b'August'), (b'SEP', b'September'), (b'OCT', b'October'), (b'NOV', b'November'), (b'DEC', b'December')], max_length=3)),
                ('value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RainData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=50)),
                ('year', models.IntegerField()),
                ('month', models.CharField(choices=[(b'JAN', b'January'), (b'FEB', b'February'), (b'MAR', b'March'), (b'APR', b'April'), (b'MAY', b'May'), (b'JUN', b'June'), (b'JUL', b'July'), (b'AUG', b'August'), (b'SEP', b'September'), (b'OCT', b'October'), (b'NOV', b'November'), (b'DEC', b'December')], max_length=3)),
                ('value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SunshineData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=50)),
                ('year', models.IntegerField()),
                ('month', models.CharField(choices=[(b'JAN', b'January'), (b'FEB', b'February'), (b'MAR', b'March'), (b'APR', b'April'), (b'MAY', b'May'), (b'JUN', b'June'), (b'JUL', b'July'), (b'AUG', b'August'), (b'SEP', b'September'), (b'OCT', b'October'), (b'NOV', b'November'), (b'DEC', b'December')], max_length=3)),
                ('value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
